# parameters
nc: 1  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.5  # layer channel multiple

# anchors
anchors:
  - [4,5,  8,10,  13,16]  # P3/8
  - [23,29,  43,55,  73,105]  # P4/16
  - [146,217,  231,300,  335,433]  # P5/32
  - [4,5,  8,10,  13,16]  # P2/4 (pour les petits visages)

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, StemBlock, [32, 3, 2]],  # 0-P1/2
   [-1, 1, C3, [64, 1]],  # 1-P2/4
   [-1, 1, Conv, [128, 3, 2]],  # 2-P3/8
   [-1, 3, C3, [128, 1]],  # 3
   [-1, 1, Conv, [256, 3, 2]],  # 4-P4/16
   [-1, 3, C3, [256, 1]],  # 5
   [-1, 1, Conv, [512, 3, 2]],  # 6-P5/32
   [-1, 1, SPP, [512, [3, 5, 7]]],  # 7
   [-1, 1, C3, [512, 1, False]],  # 8

   # DÉBUT Mécanisme GD (Gather-and-Distribute) implémenté avec Conv et Concat
   [-1, 1, Conv, [256, 1, 1]],  # 9 (P5/32-reduced)
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 10 (P5/32 -> P4/16)
   [5, 1, Conv, [256, 1, 1]],  # 11 (P4/16-reduced)
   [[11, 10], 1, Concat, [1]],  # 12 (Gather P4 features)
   [-1, 1, Conv, [256, 1, 1]],  # 13 (Conv after Concat)
   [-1, 1, C3, [256, 1, False]],  # 14 (GD-P4/16)
   
   [-1, 1, Conv, [128, 1, 1]],  # 15
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 16 (GD-P4/16 -> P3/8)
   [3, 1, Conv, [128, 1, 1]],  # 17 (P3/8-reduced)
   [[17, 16], 1, Concat, [1]],  # 18 (Gather P3 features)
   [-1, 1, Conv, [128, 1, 1]],  # 19 (Conv after Concat)
   [-1, 1, C3, [128, 1, False]],  # 20 (GD-P3/8)
   
   [-1, 1, Conv, [64, 1, 1]],  # 21
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 22 (GD-P3/8 -> P2/4)
   [1, 1, Conv, [64, 1, 1]],  # 23 (P2/4-reduced)
   [[23, 22], 1, Concat, [1]],  # 24 (Gather P2 features)
   [-1, 1, Conv, [64, 1, 1]],  # 25 (Conv after Concat)
   [-1, 1, C3, [64, 1, False]],  # 26 (GD-P2/4)
   
   # Phase de distribution (Distribute)
   [-1, 1, Conv, [128, 3, 2]],  # 27 (GD-P2/4 -> P3/8-dist)
   [[27, 20], 1, Concat, [1]],  # 28 (Distribute to P3/8)
   [-1, 1, Conv, [128, 1, 1]],  # 29 (Conv after Concat)
   [-1, 1, C3, [128, 1, False]],  # 30 (GD-P3/8-dist)
   
   [-1, 1, Conv, [256, 3, 2]],  # 31 (GD-P3/8 -> P4/16-dist)
   [[31, 14], 1, Concat, [1]],  # 32 (Distribute to P4/16)
   [-1, 1, Conv, [256, 1, 1]],  # 33 (Conv after Concat)
   [-1, 1, C3, [256, 1, False]],  # 34 (GD-P4/16-dist)
   
   [-1, 1, Conv, [512, 3, 2]],  # 35 (GD-P4/16 -> P5/32-dist)
   [[35, 9], 1, Concat, [1]],  # 36 (Distribute to P5/32)
   [-1, 1, Conv, [512, 1, 1]],  # 37 (Conv after Concat)
   [-1, 1, C3, [512, 1, False]],  # 38 (GD-P5/32-dist)
  ]

# YOLOv5 head
head:
  [
   # Tête pour les très petits visages P2/4
   [26, 1, Conv, [64, 3, 1]],  # 39 (Detect P2/4 - petits visages)
   [-1, 1, nn.Conv2d, [16, 1, 1]],  # 40 (Output P2/4)
   
   # Tête pour les petits visages P3/8
   [30, 1, Conv, [128, 3, 1]],  # 41 (Detect P3/8)
   [-1, 1, nn.Conv2d, [16, 1, 1]],  # 42 (Output P3/8)

   # Tête pour les visages moyens P4/16
   [34, 1, Conv, [256, 3, 1]],  # 43 (Detect P4/16)
   [-1, 1, nn.Conv2d, [16, 1, 1]],  # 44 (Output P4/16)
   
   # Tête pour les grands visages P5/32
   [38, 1, Conv, [512, 3, 1]],  # 45 (Detect P5/32)
   [-1, 1, nn.Conv2d, [16, 1, 1]],  # 46 (Output P5/32)
   
   # Fusion des 4 têtes
   [[40, 42, 44, 46], 1, Detect, [nc, anchors]],  # 47 (Fusion des 4 têtes)
  ]